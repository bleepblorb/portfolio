
// Carousel

$carousel-control-color:                      $jazzy;
$carousel-control-width:                      70% !default;
$carousel-control-opacity:                    0;

$carousel-indicator-width:                    48px;
$carousel-indicator-height:                   48px;
$carousel-indicator-spacer:                   3px !default;
$carousel-indicator-active-bg:                $white !default;

$carousel-caption-width:                      70% !default;
$carousel-caption-color:                      $white !default;

$carousel-control-icon-width:                 32px !default;
$carousel-control-icon-width-lg:              48px !default;

$carousel-control-prev-icon-bg: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3E%3Cpath d='M4 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E"), "#", "%23") !default;
$carousel-control-next-icon-bg: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3E%3Cpath d='M1.5 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E"), "#", "%23") !default;

$carousel-transition:           transform .6s ease-in-out !default;

// Wrapper for the slide container and indicators
.carousel, .carousel__content {
  position: relative;
  width: 100%;
}

.carousel__item {
  width: 100%;
  // margin-right: $grid-gutter-width-base;

  @include if-supports-3d-transforms() {
    backface-visibility: hidden;
    perspective: 1000px;
  }
}

.carousel__image {
  width: 100%;
}

//
// Left/right controls for nav
//

.carousel__control-prev,
.carousel__control-next {
  position: absolute;
  top: 0%;
  bottom: 0%;
  // Use flex for alignment (1-3)
  align-items: center; // 2. vertically center contents
  color: $carousel-control-color;
  opacity: $carousel-control-opacity;
  z-index: 10;
  display: none;
  cursor: pointer;
  transition: opacity 250ms;

  @media (pointer: fine) {
    display: flex; // 1. allow flex styles
  }

  // Hover/focus state
  @include hover-focus {
    color: $carousel-control-color;
    text-decoration: none;
    outline: 0;
    opacity: 1;
  }

  &:active {
    .carousel__control-prev-icon, .carousel__control-next-icon {
      transform: scale(1.2);
    }
  }
}
.carousel__control-prev {
  left: 0;
  justify-content: flex-start;
  width: 100% - $carousel-control-width;
  padding-left: 5%;
}
.carousel__control-next {
  right: 0;
  justify-content: flex-end;
  width: $carousel-control-width;
  padding-right: 5%;
}

// Icons for within
.carousel__control-prev-icon,
.carousel__control-next-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: $carousel-control-icon-width;
  height: $carousel-control-icon-width;
  border-radius: 50%;
  background-color: $ice-cube;
  font-size: 1.5rem;
  transition: all 250ms;

  @include media-breakpoint-up(md) {
    width: $carousel-control-icon-width-lg;
    height: $carousel-control-icon-width-lg;
  };
}
// .carousel__control-prev-icon {
//   background-image: $carousel-control-prev-icon-bg;
// }
// .carousel__control-next-icon {
//   background-image: $carousel-control-next-icon-bg;
// }


// Optional indicator pips
//
// Add an ordered list with the following class and add a list item for each
// slide your carousel holds.

.carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 10px;
  left: 0;
  z-index: 15;
  display: flex;
  justify-content: center;
  padding-left: 0; // override <ol> default
  // Use the .carousel-control's width as margin so we don't overlay those
  margin-right: $carousel-control-width;
  margin-left: $carousel-control-width;
  list-style: none;

  li {
    position: relative;
    flex: 1 0 auto;
    max-width: $carousel-indicator-width;
    height: $carousel-indicator-height;
    margin-right: $carousel-indicator-spacer;
    margin-left: $carousel-indicator-spacer;
    text-indent: -999px;
    cursor: pointer;
    background-color: rgba($carousel-indicator-active-bg, .5);

    // Use pseudo classes to increase the hit area by 10px on top and bottom.
    &::before {
      position: absolute;
      top: -10px;
      left: 0;
      display: inline-block;
      width: 100%;
      height: 10px;
      content: "";
    }
    &::after {
      position: absolute;
      bottom: -10px;
      left: 0;
      display: inline-block;
      width: 100%;
      height: 10px;
      content: "";
    }
  }

  .active {
    background-color: $carousel-indicator-active-bg;
  }
}

.carousel__footer {
  @include make-row();
  padding-top: 20px;
  padding-bottom: 20px;
}

.carousel__caption,
.carousel__counter {
  width: 100%;
  @include make-col-ready();
}

.carousel__counter {
  @include make-col(3);
  text-align: right;
}


// Optional captions
//
//

.carousel__caption {
  @include make-col(9);
  color: $gray-light;
  text-align: left;
  font-size: $font-size-sm;
}

/*! Flickity v2.0.9
http://flickity.metafizzy.co
---------------------------------------------- */

.flickity-enabled {
  position: relative;
}

.flickity-enabled:focus { outline: none; }

.flickity-viewport {
  overflow: hidden;
  position: relative;
  height: 100%;
}

.flickity-slider {
  position: absolute;
  display: flex;
  align-items: center;
  width: 100%;
  height: 100%;
}

/* draggable */

.flickity-enabled.is-draggable {
  -webkit-tap-highlight-color: transparent;
          tap-highlight-color: transparent;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.flickity-enabled.is-draggable .flickity-viewport {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}
