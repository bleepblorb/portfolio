// Margin and Padding

@mixin setSpacing($size, $infix, $length-y, $length-x) {
  @each $prop, $abbrev in (margin: m, padding: p) {
    .#{$abbrev}-#{$size}#{$infix}  { #{$prop}:        $length-y $length-x  !important;}
    .#{$abbrev}r-#{$size}#{$infix} { #{$prop}-right:  $length-x !important; }
    .#{$abbrev}l-#{$size}#{$infix} { #{$prop}-left:   $length-x !important; }
    .#{$abbrev}t-#{$size}#{$infix} { #{$prop}-top:    $length-y !important; }
    .#{$abbrev}b-#{$size}#{$infix} { #{$prop}-bottom: $length-y !important; }
    
    .#{$abbrev}x-#{$size}#{$infix} {
      #{$prop}-right: $length-x !important;
      #{$prop}-left:  $length-x !important;
    }
    .#{$abbrev}y-#{$size}#{$infix} {
      #{$prop}-top:    $length-y !important;
      #{$prop}-bottom: $length-y !important;
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    
      @each $size, $lengths in $spacers {
        $length-x: map-get($lengths, x);
        $length-y: map-get($lengths, y);
        $ratio: map-get($spacer-ratios, $breakpoint);

        @include setSpacing($size, '', ($spacer-y * pow($ratio, $length-y)), ($spacer-x * pow($ratio, $length-x)));

        // beakpoint specifics
        @include setSpacing($size, $infix, ($spacer-y * pow($ratio, $length-y)), ($spacer-x * pow($ratio, $length-x)));
      

      // beakpoint specifics
      // @include setSpacing($abbrev, '0', $infix, $prop, 0, 0);
    }

    // Some special margin utils
    .m#{$infix}-auto  { margin:        auto !important; }
    .mt#{$infix}-auto { margin-top:    auto !important; }
    .mr#{$infix}-auto { margin-right:  auto !important; }
    .mb#{$infix}-auto { margin-bottom: auto !important; }
    .ml#{$infix}-auto { margin-left:   auto !important; }
    .mx#{$infix}-auto {
      margin-right: auto !important;
      margin-left:  auto !important;
    }
    .my#{$infix}-auto {
      margin-top:    auto !important;
      margin-bottom: auto !important;
    }
  }
}

// resets for 0 
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @include setSpacing('0', $infix, 0, 0);
  }
}





